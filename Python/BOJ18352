from heapq import heappush, heappop
n, m, k, x = map(int, input().split())
graph = [[] for _ in range(n+1)]
dist = [float('inf')] * (n+1)
for _ in range(m):
    a, b = map(int, input().split())
    graph[a].append((1, b))
hq = []
heappush(hq, (0, x))
while hq:
    cur_cost, cur_node = heappop(hq)
    if dist[cur_node] < cur_cost:
        continue
    else:
        dist[cur_node] = cur_cost
        for cost, next_node in graph[cur_node]:
            next_cost = cur_cost + cost
            if dist[next_node] > next_cost:
                dist[next_node] = next_cost
                heappush(hq, (next_cost, next_node))

if k not in dist[1:]:
    print(-1)
else:
    for i in range(1, len(dist)):
        if dist[i] == k:
            print(i)
